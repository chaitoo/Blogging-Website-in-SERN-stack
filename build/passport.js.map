{"version":3,"sources":["../src/passport.js"],"names":["module","exports","passport","user","User","LocalStrategy","require","Strategy","use","usernameField","passwordField","passReqToCallback","req","email","password","done","generateHash","hashSync","genSaltSync","findOne","where","then","message","userPassword","data","firstname","body","lastname","role","create","newUser","created","isValidPassword","userpass","compareSync","console","log","userinfo","get","catch","err","serializeUser","id","deserializeUser","findById","errors"],"mappings":"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","file":"passport.js","sourcesContent":["import bCrypt from 'bcrypt-nodejs';\n\nmodule.exports = function(passport, user) {\n    var User = user;\n    var LocalStrategy = require('passport-local').Strategy;\n    passport.use('local-signup', new LocalStrategy(\n        {\n            usernameField: 'email',\n            passwordField: 'password',\n            passReqToCallback: true\n        },\n        function(req, email, password, done) {\n            var generateHash = function(password) {\n                return bCrypt.hashSync(password, bCrypt.genSaltSync(8), null);\n            };\n            User.findOne({\n                where: {\n                    email: email\n                }\n            }).then(function(user) {\n                if (user)\n                {\n                    return done(null, false, {\n                        message: 'That email is already taken'\n                    });\n                } else\n                {\n                    var userPassword = generateHash(password);\n                    var data =\n                        {\n                            email: email,\n                            password: userPassword,\n                            firstname: req.body.firstname,\n                            lastname: req.body.lastname,\n                            role: 'user'\n                        };\n                    User.create(data).then(function(newUser, created) {\n                        if (!newUser) {\n                            return done(null, false);\n                        }\n                        if (newUser) {\n                            return done(null, newUser);\n                        }\n                    });\n                }\n            });\n        }\n    ));\n\n    //LOCAL SIGNIN\n    passport.use('local-signin', new LocalStrategy(\n        {\n            usernameField: 'email',\n            passwordField: 'password',\n            passReqToCallback: true\n        },\n        function(req, email, password, done) {\n            var User = user;\n            var isValidPassword = function(userpass, password) {\n                return bCrypt.compareSync(password, userpass);\n            }\n\n            User.findOne({\n                where: {\n                    email: email\n                }\n            }).then(function(user) {\n                if (!user) {\n                  console.log(\"user not found\");\n                    return done(null, false, {\n                        message: 'Email does not exist'\n                    });\n                }\n                if (!isValidPassword(user.password, password)) {\n                  console.log(\"pass wrong\");\n                    return done(null, false, {\n                        message: 'Incorrect password.'\n                    });\n                }\n                console.log(\"hiii\");\n                var userinfo = user.get();\n                return done(null, userinfo);\n            }).catch(function(err) {\n                console.log(\"Error:\", err);\n                return done(null, false, {\n                    message: 'Something went wrong with your Signin'\n                });\n            });\n        }\n    ));\n\n    //serialize\n    passport.serializeUser(function(user, done) {\n        done(null, user.id);\n    });\n    // deserialize user\n    passport.deserializeUser(function(id, done) {\n        User.findById(id).then(function(user) {\n            if (user) {\n                done(null, user.get());\n            } else {\n                done(user.errors, null);\n            }\n        });\n    });\n}\n"]}